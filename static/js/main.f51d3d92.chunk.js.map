{"version":3,"sources":["components/sections/Hero.module.css","components/content/Summary.module.css","components/content/Tally.module.css","components/sections/Result.module.css","components/content/DetailView.module.css","components/portraits/Logo.module.css","components/ui/effects/Grayout.module.css","components/content/ContentCard.module.css","components/portraits/Flag.module.css","components/sections/Search.module.css","components/content/TextInput.module.css","components/modals/FullScreenModal.module.css","assets/images/logo.svg","components/ui/containers/FlexContainer.module.css","components/ui/containers/GridContainer.module.css","components/ui/effects/Background.module.css","components/ui/structures/Header.module.css","components/ui/structures/Main.module.css","components/ui/structures/Pillar.module.css","providers/index.tsx","components/sections/Hero.tsx","api/fragments.tsx","api/queries.tsx","utils/noOp.ts","components/content/ContentCard.tsx","components/content/Summary.tsx","utils/summarize.ts","components/content/Tally.tsx","components/portraits/Flag.tsx","hooks/generated/index.tsx","components/sections/Result.tsx","components/sections/Search.tsx","utils/addEventListener.ts","components/content/DetailView.tsx","hooks/useClickOutside.tsx","utils/compose.ts","components/content/TextInput.tsx","components/modals/FullScreenModal.tsx","hooks/useAbsoluteUrl.tsx","utils/predicates.ts","components/portraits/Logo.tsx","components/ui/containers/FlexContainer.tsx","components/ui/containers/GridContainer.tsx","components/ui/effects/Grayout.tsx","components/ui/effects/Background.tsx","components/ui/structures/Header.tsx","components/ui/structures/Main.tsx","components/ui/structures/Pillar.tsx","components/App.tsx","hooks/useToggle.tsx","index.tsx","utils/getElementById.ts"],"names":["module","exports","client","ApolloClient","cache","InMemoryCache","connectToDevTools","uri","Providers","children","Hero","title","subtitle","className","styles","hero","fade","countryDetailsFragment","gql","relatedCountriesDetailsFragment","Country","reusableDud","noOp","_","ContentCard","look","onClick","onMouseOver","isPrefetched","setIsPrefetched","useState","Summary","continent","country","facts","summary","capital","currency","languages","safetyNet","push","name","split","filter","Boolean","join","summarize","Tally","countries","matches","relatedCountries","related","all","Flag","countryCode","alt","flag","src","CountryDetailsFragmentDoc","RelatedCountriesDetailsFragmentDoc","CountriesDocument","CountryDocument","Result","searchString","data","error","loading","Apollo","baseOptions","result","toLowerCase","startsWith","sortedMatches","sort","a","b","length","map","code","countryFacts","query","variables","key","Search","search","addEventListener","type","listener","document","passive","removeEventListener","DetailView","onClickOutside","clickOutsideRef","useRef","elementRef","handler","memoizedHandler","useCallback","useEffect","event","current","contains","target","unsubscribe","functions","each","compose","useClickOutside","firstThree","slice","detailView","ref","miniResults","TextInput","onChange","placeholder","value","inputRef","focus","textInput","id","FullScreenModal","createPortal","fullScreenModal","body","useAbsoluteUrl","href","URL","e","TypeError","console","warn","Logo","link","rel","logo","FlexContainer","flexContainer","GridContainer","gridContainer","Grayout","top","bottom","Background","background","Header","header","Main","main","Pillar","size","App","searchTerm","setSearchTerm","selectedCountry","setSelectedCountry","isModalOpen","openModal","closeModal","initialState","isOn","setTo","useToggle","searchInput","trim","root","finding","getElementById","t","Object","is","ReferenceError","render"],"mappings":"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","file":"static/js/main.f51d3d92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fade\":\"Hero_fade__iVJjl\",\"hero\":\"Hero_hero__3j6HR\",\"subtitle\":\"Hero_subtitle__1EVrj\",\"title\":\"Hero_title__1szOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"continent\":\"Summary_continent__1tPvQ\",\"country\":\"Summary_country__35gKt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"Tally_all__2Y3RP\",\"related\":\"Tally_related__3ycar\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"Result_result__rHD3n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailView\":\"DetailView_detailView__2uSWf\",\"flag\":\"DetailView_flag__3B4BV\",\"miniResults\":\"DetailView_miniResults__1Bs7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Logo_link__pJ40V\",\"logo\":\"Logo_logo__sqI9p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bottom\":\"Grayout_bottom__2piWU\",\"top\":\"Grayout_top__39qsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overview\":\"ContentCard_overview__1vUhd\",\"detail\":\"ContentCard_detail__aW99j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flag\":\"Flag_flag__qUCS2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__Eoksl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textInput\":\"TextInput_textInput__2x_Xq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullScreenModal\":\"FullScreenModal_fullScreenModal__3Qhv3\"};","module.exports = __webpack_public_path__ + \"static/media/logo.8a0a03c1.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexContainer\":\"FlexContainer_flexContainer__1w6Xo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridContainer\":\"GridContainer_gridContainer__Qp6w3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Background_background__N-cUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__mLjKz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__j2P5T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"big\":\"Pillar_big__AIRuS\",\"small\":\"Pillar_small__13Exe\"};","import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport type { ReactNode } from \"react\";\nimport React from \"react\";\nimport type { FC } from \"typings/FC\";\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  connectToDevTools: true,\n  uri: \"https://countries.trevorblades.com/graphql\",\n});\n\ntype Props = {\n  children: ReactNode;\n};\n\n/** Little-known fact: this added level of indirection (instantiating all context\n * providers above the actual `App` component in the tree) is strictly necessary\n * for React not to re-render needlessly when unrelated state changes.\n *\n * Original PSA: https://twitter.com/sophiebits/status/1228942768543686656\n *\n * Video demonstration: https://www.youtube.com/watch?v=CDGBTjMBJzg */\nexport const Providers: FC<Props> = ({ children }) => {\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n};\n","import React from \"react\";\nimport type { FC } from \"typings/FC\";\nimport styles from \"./Hero.module.css\";\n\ntype Props = {\n  title: string;\n  subtitle: string;\n};\n\nexport const Hero: FC<Props> = ({ title, subtitle }) => {\n  return (\n    <section className={styles.hero}>\n      <div className={styles.fade}>\n        <h1 className={styles.title}>{title}</h1>\n        <h5 className={styles.subtitle}>{subtitle}</h5>\n      </div>\n    </section>\n  );\n};\n","import { gql } from \"@apollo/client\";\n\nexport const countryDetailsFragment = gql`\n  fragment countryDetails on Country {\n    capital\n    code\n    continent {\n      name\n    }\n    currency\n    languages {\n      name\n    }\n    name\n  }\n`;\n\nexport const relatedCountriesDetailsFragment = gql`\n  fragment relatedCountriesDetails on Country {\n    continent {\n      name\n      countries {\n        ...countryDetails\n      }\n    }\n  }\n  ${countryDetailsFragment}\n`;\n","import { gql } from \"@apollo/client\";\nimport { countryDetailsFragment, relatedCountriesDetailsFragment } from \"./fragments\";\n\nexport const Countries = gql`\n  query Countries {\n    countries {\n      ...countryDetails\n    }\n  }\n  ${countryDetailsFragment}\n`;\n\nexport const Country = gql`\n  query Country($code: ID!) {\n    country(code: $code) {\n      capital\n      currency\n      languages {\n        name\n      }\n      name\n      ...relatedCountriesDetails\n    }\n  }\n  ${relatedCountriesDetailsFragment}\n`;\n","/** Returning the same individual \"do-nothing function\" on every call to `noOp` ensures an allocation cost of N(1).  */\nconst reusableDud = () => {};\n\n/** Call `noOp` wherever you would otherwise declare a new anonymous do-nothing function (typically inline, as a default parameter).\n *\n * Calling `noOp` will keep the inferred types of your function's signature in check.\n *\n * It will also execute faster at run-time, by virtue of saving precious heap allocations. */\nexport const noOp = <T>(..._: any[]) => {\n  /** These type acrobatics preserve the proper contextual type inference when passing `noOp()`\n   * as the default parameter in place of some other, \"real\" function. */\n  return (reusableDud as unknown) as NonNullable<T>;\n};\n","import type { MouseEventHandler, ReactNode } from \"react\";\nimport React, { useState } from \"react\";\nimport type { FC } from \"typings/FC\";\nimport { noOp } from \"utils/noOp\";\nimport styles from \"./ContentCard.module.css\";\n\ntype Props = {\n  children: ReactNode;\n  look: \"detail\" | \"overview\";\n  onClick?: () => void;\n  onMouseOver?: () => void;\n};\n\nexport const ContentCard: FC<Props> = ({ children, look, onClick = noOp(), onMouseOver = noOp() }) => {\n  const [isPrefetched, setIsPrefetched] = useState(false);\n\n  const handleMouseOver: MouseEventHandler<HTMLDivElement> = () => {\n    if (isPrefetched) return;\n\n    onMouseOver();\n    setIsPrefetched(true);\n  };\n\n  return (\n    <article onClick={onClick} onMouseOver={handleMouseOver} className={styles[look]}>\n      {children}\n    </article>\n  );\n};\n","import React from \"react\";\nimport type { CountryFacts } from \"typings/CountryFacts\";\nimport type { FC } from \"typings/FC\";\nimport type { Continent, Country } from \"typings/generated\";\nimport { summarize } from \"utils/summarize\";\nimport styles from \"./Summary.module.css\";\n\n/** This is one way to express an XOR relationship in TypeScript.\n *\n * Accepts one of two possible permutations:\n *  1. `countryName` and `countrySummary` (but not `continentName`)\n *  2. `countryName` and `continentName` (but not `countrySummary`)\n *\n * And never both, and never neither. <3 */\ntype Props =\n  | {\n      country: Country[\"name\"];\n      facts: CountryFacts;\n      continent?: never;\n    }\n  | {\n      country: Country[\"name\"];\n      facts?: never;\n      continent: Continent[\"name\"];\n    };\n\nexport const Summary: FC<Props> = ({ continent, country, facts }) => {\n  if (facts) {\n    const summary = summarize(facts);\n\n    return (\n      <div className={styles.country}>\n        <h3>{country}</h3>\n        <p>{summary} </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.continent}>\n      <h2>{country}</h2>\n      <h3>{continent}</h3>\n    </div>\n  );\n};\n","import type { CountryFacts } from \"typings/CountryFacts\";\n\nexport const summarize = ({ capital, continent, currency, languages }: CountryFacts) => {\n  const safetyNet: string[] = [];\n\n  safetyNet.push(\n    capital ?? \"\",\n    continent?.name ?? \"\",\n    currency ? currency.split(\",\")[0] : \"\",\n    languages?.[0]?.name ?? \"\",\n  );\n\n  const facts = safetyNet.filter(Boolean);\n\n  const summary = facts.join(\" ● \");\n\n  return summary;\n};\n","import React from \"react\";\nimport type { FC } from \"typings/FC\";\nimport styles from \"./Tally.module.css\";\n\n/** This is one way to express an XOR relationship in TypeScript.\n *\n * Accepts one of two possible permutations:\n *  1. `countries` and `matches` (but not `relatedCountries`)\n *  2. `relatedCountries` (but neither `countries` nor `matches`)\n *\n * And never both, and never neither. <3 */\ntype Props =\n  | {\n      countries: number;\n      matches: number;\n      relatedCountries?: never;\n    }\n  | {\n      countries?: never;\n      matches?: never;\n      relatedCountries: number;\n    };\n\nexport const Tally: FC<Props> = ({ countries, matches, relatedCountries }) => {\n  if (relatedCountries) {\n    return <h3 className={styles.related}>{relatedCountries}+ more</h3>;\n  }\n\n  return (\n    <div className={styles.all}>\n      <h3>All Countries</h3>\n      <p>\n        {matches}/{countries}\n      </p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport type { FC } from \"typings/FC\";\nimport type { Country } from \"typings/generated\";\nimport styles from \"./Flag.module.css\";\n\ntype Props = {\n  countryCode: Country[\"code\"];\n};\n\nexport const Flag: FC<Props> = ({ countryCode }) => {\n  return (\n    <img\n      alt={`Flag of ${countryCode}`}\n      className={styles.flag}\n      src={`${process.env.PUBLIC_URL}/images/flags/${countryCode}.png`}\n    />\n  );\n};\n","import { gql } from \"@apollo/client\";\nimport * as Apollo from \"@apollo/client\";\nimport { CountriesQuery, CountriesQueryVariables, CountryQuery, CountryQueryVariables } from \"typings/generated\";\nexport const CountryDetailsFragmentDoc = gql`\n  fragment countryDetails on Country {\n    capital\n    code\n    continent {\n      name\n    }\n    currency\n    languages {\n      name\n    }\n    name\n  }\n`;\nexport const RelatedCountriesDetailsFragmentDoc = gql`\n  fragment relatedCountriesDetails on Country {\n    continent {\n      name\n      countries {\n        ...countryDetails\n      }\n    }\n  }\n  ${CountryDetailsFragmentDoc}\n`;\nexport const CountriesDocument = gql`\n  query Countries {\n    countries {\n      ...countryDetails\n    }\n  }\n  ${CountryDetailsFragmentDoc}\n`;\n\n/**\n * __useCountriesQuery__\n *\n * To run a query within a React component, call `useCountriesQuery` and pass it any options that fit your needs.\n * When your component renders, `useCountriesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCountriesQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCountriesQuery(baseOptions?: Apollo.QueryHookOptions<CountriesQuery, CountriesQueryVariables>) {\n  return Apollo.useQuery<CountriesQuery, CountriesQueryVariables>(CountriesDocument, baseOptions);\n}\nexport function useCountriesLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<CountriesQuery, CountriesQueryVariables>,\n) {\n  return Apollo.useLazyQuery<CountriesQuery, CountriesQueryVariables>(CountriesDocument, baseOptions);\n}\nexport type CountriesQueryHookResult = ReturnType<typeof useCountriesQuery>;\nexport type CountriesLazyQueryHookResult = ReturnType<typeof useCountriesLazyQuery>;\nexport type CountriesQueryResult = Apollo.QueryResult<CountriesQuery, CountriesQueryVariables>;\nexport function refetchCountriesQuery(variables?: CountriesQueryVariables) {\n  return { query: CountriesDocument, variables: variables };\n}\nexport const CountryDocument = gql`\n  query Country($code: ID!) {\n    country(code: $code) {\n      capital\n      currency\n      languages {\n        name\n      }\n      name\n      ...relatedCountriesDetails\n    }\n  }\n  ${RelatedCountriesDetailsFragmentDoc}\n`;\n\n/**\n * __useCountryQuery__\n *\n * To run a query within a React component, call `useCountryQuery` and pass it any options that fit your needs.\n * When your component renders, `useCountryQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCountryQuery({\n *   variables: {\n *      code: // value for 'code'\n *   },\n * });\n */\nexport function useCountryQuery(baseOptions?: Apollo.QueryHookOptions<CountryQuery, CountryQueryVariables>) {\n  return Apollo.useQuery<CountryQuery, CountryQueryVariables>(CountryDocument, baseOptions);\n}\nexport function useCountryLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<CountryQuery, CountryQueryVariables>) {\n  return Apollo.useLazyQuery<CountryQuery, CountryQueryVariables>(CountryDocument, baseOptions);\n}\nexport type CountryQueryHookResult = ReturnType<typeof useCountryQuery>;\nexport type CountryLazyQueryHookResult = ReturnType<typeof useCountryLazyQuery>;\nexport type CountryQueryResult = Apollo.QueryResult<CountryQuery, CountryQueryVariables>;\nexport function refetchCountryQuery(variables?: CountryQueryVariables) {\n  return { query: CountryDocument, variables: variables };\n}\n","import { Country } from \"api/queries\";\nimport { ContentCard } from \"components/content/ContentCard\";\nimport { Summary } from \"components/content/Summary\";\nimport { Tally } from \"components/content/Tally\";\nimport { Flag } from \"components/portraits/Flag\";\nimport { useCountriesQuery } from \"hooks/generated\";\nimport React from \"react\";\nimport type { FC } from \"typings/FC\";\nimport styles from \"./Result.module.css\";\n\ntype Props = {\n  onClick: (countryName: string) => void;\n  searchString: string;\n};\n\nexport const Result: FC<Props> = ({ onClick, searchString }) => {\n  const { client, data, error, loading } = useCountriesQuery();\n\n  // Short-circuiting in order of fastest-to-check.\n  if (!searchString || loading || error || !data) {\n    return <section className={styles.result} />;\n  }\n\n  const { countries } = data;\n\n  const matches = countries.filter(function byInitial({ name }) {\n    return name.toLowerCase().startsWith(searchString);\n  });\n\n  const sortedMatches = matches.sort(function inAlphabeticalOrder({ name: a }, { name: b }) {\n    return a === b ? 0 : a < b ? -1 : 1;\n  });\n\n  return (\n    <>\n      <Tally countries={countries.length} matches={matches.length} />\n      <section className={styles.result}>\n        {sortedMatches.map(({ code, name, ...countryFacts }) => {\n          const handleClick = () => {\n            onClick(code);\n          };\n\n          const prefetchCountryData = () => {\n            client.query({ query: Country, variables: { code } });\n          };\n\n          return (\n            <ContentCard look=\"overview\" onClick={handleClick} onMouseOver={prefetchCountryData} key={code}>\n              <Flag countryCode={code} />\n              <Summary country={name} facts={countryFacts} />\n            </ContentCard>\n          );\n        })}\n      </section>\n    </>\n  );\n};\n","import type { ReactNode } from \"react\";\nimport React from \"react\";\nimport type { FC } from \"typings/FC\";\nimport styles from \"./Search.module.css\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const Search: FC<Props> = ({ children }) => {\n  return <section className={styles.search}>{children}</section>;\n};\n","/** A more typesafe `addEventListener` that returns a convenient cleanup function.\n *\n * Assists runtime performance by enforcing the use of passive event listeners.\n *\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md */\nexport const addEventListener = (type: keyof WindowEventMap, listener: EventListener) => {\n  document.addEventListener(type, listener, { passive: true });\n\n  const unsubscribe = () => {\n    document.removeEventListener(type, listener);\n  };\n\n  return unsubscribe;\n};\n","import { ContentCard } from \"components/content/ContentCard\";\nimport { Summary } from \"components/content/Summary\";\nimport { Tally } from \"components/content/Tally\";\nimport { Flag } from \"components/portraits/Flag\";\nimport { useCountryQuery } from \"hooks/generated\";\nimport { useClickOutside } from \"hooks/useClickOutside\";\nimport React, { useRef } from \"react\";\nimport type { FC } from \"typings/FC\";\nimport type { Country } from \"typings/generated\";\nimport styles from \"./DetailView.module.css\";\n\ntype Props = {\n  countryCode: Country[\"code\"];\n  onClickOutside: EventListener;\n};\n\nexport const DetailView: FC<Props> = ({ countryCode, onClickOutside }) => {\n  const clickOutsideRef = useRef<HTMLDivElement>(null);\n  useClickOutside(clickOutsideRef, onClickOutside);\n  const { data, error, loading } = useCountryQuery({ variables: { code: countryCode } });\n\n  /** In a real project, this would be good place to present a loading indicator, do graceful error handling, etc. */\n  if (loading || error || !data) {\n    return null;\n  }\n\n  const { country } = data;\n\n  if (!country) {\n    return null;\n  }\n\n  const { name, continent } = country;\n\n  const { countries: relatedCountries } = continent;\n\n  if (!relatedCountries) {\n    return null;\n  }\n\n  const firstThree = relatedCountries.slice(0, 3);\n\n  return (\n    <div className={styles.detailView} ref={clickOutsideRef}>\n      <Flag countryCode={countryCode} />\n      <Summary continent={continent.name} country={name} />\n      <div className={styles.miniResults}>\n        <h4>Other countries in {continent.name}</h4>\n        {firstThree.map(({ code, name, ...countryFacts }) => {\n          return (\n            <ContentCard key={name} look=\"detail\">\n              <Flag countryCode={code} />\n              <Summary country={name} facts={countryFacts} />\n            </ContentCard>\n          );\n        })}\n      </div>\n      <Tally relatedCountries={relatedCountries.length} />\n    </div>\n  );\n};\n","import type { RefObject } from \"react\";\nimport { useCallback, useEffect } from \"react\";\nimport { addEventListener } from \"utils/addEventListener\";\nimport { compose } from \"utils/compose\";\n\nexport const useClickOutside = (elementRef: RefObject<HTMLDivElement>, handler: EventListener) => {\n  const memoizedHandler = useCallback(handler, [elementRef]);\n\n  useEffect(\n    function addEventListeners() {\n      const listener: EventListener = (event: Event) => {\n        if (!elementRef.current) {\n          return;\n        }\n\n        // Do nothing when the ref's element (or any of its descendents) was clicked.\n        if (elementRef.current.contains(event.target as Node)) {\n          return;\n        }\n\n        memoizedHandler(event);\n      };\n\n      const unsubscribe = compose(addEventListener(\"mousedown\", listener), addEventListener(\"touchstart\", listener));\n\n      return function cleanup() {\n        unsubscribe();\n      };\n    },\n    [elementRef, memoizedHandler],\n  );\n};\n","/** Since we won't be passing the callbacks any arguments, they must not want\n * to be given any in the first place. */\ntype ZeroParameterCallback = () => void;\n\n/** Composes any number of functions into a single function. */\nexport const compose = (...functions: ZeroParameterCallback[]) => {\n  const runInSequence = () => {\n    for (const each of functions) {\n      each();\n    }\n  };\n\n  return runInSequence;\n};\n","import React, { ChangeEventHandler, useEffect, useRef } from \"react\";\nimport type { FC } from \"typings/FC\";\nimport styles from \"./TextInput.module.css\";\n\ntype Props = {\n  onChange: ChangeEventHandler<HTMLInputElement>;\n  placeholder: string;\n  value: string;\n};\n\nexport const TextInput: FC<Props> = ({ onChange, placeholder, value }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(function focusTextInputOnPageLoad() {\n    inputRef?.current?.focus();\n  }, []);\n\n  return (\n    <input\n      className={styles.textInput}\n      id=\"textInput\"\n      onChange={onChange}\n      placeholder={placeholder}\n      ref={inputRef}\n      type=\"text\"\n      value={value}\n    />\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport type { FC } from \"typings/FC\";\nimport styles from \"./FullScreenModal.module.css\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const FullScreenModal: FC<Props> = ({ children }) => {\n  return createPortal(<div className={styles.fullScreenModal}>{children}</div>, document.body);\n};\n","import { useEffect } from \"react\";\nimport { isTypeError } from \"utils/predicates\";\n\n/** Warns the developer if accidentally passed a broken or unexpectedly relative URL.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/URL/URL */\nexport const useAbsoluteUrl = (href: string) => {\n  useEffect(() => {\n    try {\n      new URL(href);\n    } catch (e: unknown) {\n      if (isTypeError(e)) {\n        console.warn(`Expected valid absolute URL, received \"${href}\".`);\n      }\n    }\n  }, [href]);\n};\n","/** Type predicates for the TypeScript compiler (note the special return signature).\n *\n * See: https://fettblog.eu/typescript-type-predicates/ */\n\nexport const isTypeError = (t: unknown): t is TypeError => {\n  return t instanceof TypeError;\n};\n\nexport const isNull = (t: unknown): t is null => {\n  return Object.is(t, null);\n};\n","import logo from \"assets/images/logo.svg\";\nimport { useAbsoluteUrl } from \"hooks/useAbsoluteUrl\";\nimport React from \"react\";\nimport type { FC } from \"typings/FC\";\nimport styles from \"./Logo.module.css\";\n\ntype Props = {\n  href?: string;\n};\n\nexport const Logo: FC<Props> = ({ href = \"https://learn2esport.com/\" }) => {\n  useAbsoluteUrl(href);\n\n  return (\n    <div>\n      <a className={styles.link} href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n        <img className={styles.logo} src={logo} alt=\"Learn2Esports logo\" />\n      </a>\n    </div>\n  );\n};\n","import type { ReactNode } from \"react\";\nimport React from \"react\";\nimport type { FC } from \"typings/FC\";\nimport styles from \"./FlexContainer.module.css\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const FlexContainer: FC<Props> = ({ children }) => {\n  return <div className={styles.flexContainer}>{children}</div>;\n};\n","import type { ReactNode } from \"react\";\nimport React from \"react\";\nimport type { FC } from \"typings/FC\";\nimport styles from \"./GridContainer.module.css\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const GridContainer: FC<Props> = ({ children }) => {\n  return <div className={styles.gridContainer}>{children}</div>;\n};\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport type { FC } from \"typings/FC\";\nimport styles from \"./Grayout.module.css\";\n\ntype Props = {};\n\nexport const Grayout: FC<Props> = () => {\n  return createPortal(\n    <>\n      <div className={styles.top}></div>\n      <div className={styles.bottom}></div>\n    </>,\n    document.body,\n  );\n};\n","import { Grayout } from \"components/ui/effects/Grayout\";\nimport type { ReactNode } from \"react\";\nimport React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport type { FC } from \"typings/FC\";\nimport styles from \"./Background.module.css\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const Background: FC<Props> = ({ children }) => {\n  return createPortal(\n    <>\n      <div className={styles.background}></div>\n      <Grayout />\n      <div>{children}</div>\n    </>,\n    document.body,\n  );\n};\n","import type { ReactNode } from \"react\";\nimport React from \"react\";\nimport type { FC } from \"typings/FC\";\nimport styles from \"./Header.module.css\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const Header: FC<Props> = ({ children }) => {\n  return <header className={styles.header}>{children}</header>;\n};\n","import type { ReactNode } from \"react\";\nimport React from \"react\";\nimport type { FC } from \"typings/FC\";\nimport styles from \"./Main.module.css\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const Main: FC<Props> = ({ children }) => {\n  return <main className={styles.main}>{children}</main>;\n};\n","import React from \"react\";\nimport type { FC } from \"typings/FC\";\nimport styles from \"./Pillar.module.css\";\n\ntype Props = {\n  size: \"small\" | \"big\";\n};\n\nexport const Pillar: FC<Props> = ({ size }) => {\n  return <div className={styles[size]} />;\n};\n","import { Hero } from \"components/sections/Hero\";\nimport { Result } from \"components/sections/Result\";\nimport { Search } from \"components/sections/Search\";\nimport { DetailView } from \"components/content/DetailView\";\nimport { TextInput } from \"components/content/TextInput\";\nimport { FullScreenModal } from \"components/modals/FullScreenModal\";\nimport { Logo } from \"components/portraits/Logo\";\nimport { FlexContainer } from \"components/ui/containers/FlexContainer\";\nimport { GridContainer } from \"components/ui/containers/GridContainer\";\nimport { Background } from \"components/ui/effects/Background\";\nimport { Header } from \"components/ui/structures/Header\";\nimport { Main } from \"components/ui/structures/Main\";\nimport { Pillar } from \"components/ui/structures/Pillar\";\nimport { useToggle } from \"hooks/useToggle\";\nimport React, { ChangeEventHandler, useState } from \"react\";\nimport type { FC } from \"typings/FC\";\nimport type { Country } from \"typings/generated\";\n\ntype Props = {};\n\nexport const App: FC<Props> = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedCountry, setSelectedCountry] = useState<Country[\"code\"]>(\"\");\n  const [isModalOpen, openModal, closeModal] = useToggle();\n\n  const handleSearchInput: ChangeEventHandler<HTMLInputElement> = ({ target }) => {\n    const searchInput = target.value.trim();\n\n    if (!searchInput) {\n      return setSearchTerm(\"\");\n    }\n\n    if (searchInput.length < 30) {\n      setSearchTerm(searchInput.toLowerCase());\n    }\n  };\n\n  const handleCardClick = (countryCode: Country[\"code\"]) => {\n    setSelectedCountry(countryCode);\n    openModal();\n  };\n\n  return (\n    <Background>\n      <GridContainer>\n        <Header>\n          <Logo />\n        </Header>\n        <Pillar size=\"small\" />\n        <Main>\n          <FlexContainer>\n            <Hero subtitle=\"Sit Dolor\" title={\"Lorem Ipsum\"} />\n            <Search>\n              <TextInput onChange={handleSearchInput} placeholder=\"Search for a country\" value={searchTerm} />\n            </Search>\n            <Result searchString={searchTerm} onClick={handleCardClick} />\n          </FlexContainer>\n        </Main>\n        <Pillar size=\"big\" />\n      </GridContainer>\n      {isModalOpen && (\n        <FullScreenModal>\n          <DetailView countryCode={selectedCountry} onClickOutside={closeModal} />\n        </FullScreenModal>\n      )}\n    </Background>\n  );\n};\n","import { useState } from \"react\";\n\nexport const useToggle = (initialState: boolean = false) => {\n  const [isOn, setTo] = useState(initialState);\n\n  const enable = () => {\n    setTo(true);\n  };\n\n  const disable = () => {\n    setTo(false);\n  };\n\n  const toggle = () => {\n    setTo(!isOn);\n  };\n\n  return [isOn, enable, disable, toggle] as const;\n};\n","import \"normalize.css\";\nimport { Providers } from \"providers\";\nimport React, { StrictMode } from \"react\";\nimport { render } from \"react-dom\";\nimport { getElementById } from \"utils/getElementById\";\nimport { App } from \"./components/App\";\nimport \"./styles/reset.module.css\";\n\nconst root = getElementById(\"root\");\n\nrender(\n  <StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </StrictMode>,\n  root,\n);\n","import { isNull } from \"utils/predicates\";\n\n/** A more typesafe `getElementById`.\n *\n * The `never` type in the return signature specifies that this function either\n * returns an `HTMLElement` or it throws (read: it never returns).\n *\n * See: https://mariusschulz.com/articles/the-never-type-in-typescript */\nexport const getElementById = (id: string): HTMLElement | never => {\n  const finding = document.getElementById(id);\n\n  if (isNull(finding)) {\n    throw new ReferenceError(\n      `Could not locate DOM element with ID \"${id}\"! This might indicate a problem in the HTML file.`,\n    );\n  }\n\n  return finding;\n};\n"],"sourceRoot":""}